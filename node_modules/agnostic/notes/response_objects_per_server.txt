# Express, no parser

 RESPONSE TYPE: ServerResponse {
  domain: null,
  _events: [Object],
  _eventsCount: 1,
  _maxListeners: undefined,
  output: [Object],
  outputEncodings: [Object],
  outputCallbacks: [Object],
  outputSize: 0,
  writable: true,
  _last: false,
  chunkedEncoding: false,
  shouldKeepAlive: false,
  useChunkedEncodingByDefault: true,
  sendDate: true,
  _removedHeader: {},
  _contentLength: null,
  _hasBody: true,
  _trailer: '',
  finished: false,
  _headerSent: false,
  socket: [Object],
  connection: [Object],
  _header: null,
  _headers: [Object],
  _headerNames: [Object],
  _onPendingData: [Object],
  req: [Object],
  locals: {} } <<

# Express, parsed

 RESPONSE TYPE: ServerResponse {
  domain: null,
  _events: [Object],
  _eventsCount: 1,
  _maxListeners: undefined,
  output: [Object],
  outputEncodings: [Object],
  outputCallbacks: [Object],
  outputSize: 0,
  writable: true,
  _last: false,
  chunkedEncoding: false,
  shouldKeepAlive: false,
  useChunkedEncodingByDefault: true,
  sendDate: true,
  _removedHeader: {},
  _contentLength: null,
  _hasBody: true,
  _trailer: '',
  finished: false,
  _headerSent: false,
  socket: [Object],
  connection: [Object],
  _header: null,
  _headers: [Object],
  _headerNames: [Object],
  _onPendingData: [Object],
  req: [Object],
  locals: {} } <<

Hapi

 RESPONSE TYPE: { [Function]
  [length]: 3,
  [name]: '',
  _replied: false,
  _next: [Object],
  realm: [Object],
  request: [Object],
  response: [Object],
  close: [Object],
  state: [Object],
  unstate: [Object],
  redirect: [Object],
  continue: [Object] } <<

# http

 RESPONSE TYPE: ServerResponse {
  domain: null,
  _events: [Object],
  _eventsCount: 1,
  _maxListeners: undefined,
  output: [Object],
  outputEncodings: [Object],
  outputCallbacks: [Object],
  outputSize: 0,
  writable: true,
  _last: false,
  chunkedEncoding: false,
  shouldKeepAlive: false,
  useChunkedEncodingByDefault: true,
  sendDate: true,
  _removedHeader: {},
  _contentLength: null,
  _hasBody: true,
  _trailer: '',
  finished: false,
  _headerSent: false,
  socket: [Object],
  connection: [Object],
  _header: null,
  _headers: null,
  _headerNames: {},
  _onPendingData: [Object] } <<

# Restify, no parser

 RESPONSE TYPE: ServerResponse {
  domain: [Object],
  _events: [Object],
  _eventsCount: 1,
  _maxListeners: undefined,
  output: [Object],
  outputEncodings: [Object],
  outputCallbacks: [Object],
  outputSize: 0,
  writable: true,
  _last: false,
  chunkedEncoding: false,
  shouldKeepAlive: false,
  useChunkedEncodingByDefault: true,
  sendDate: true,
  _removedHeader: {},
  _contentLength: null,
  _hasBody: true,
  _trailer: '',
  finished: false,
  _headerSent: false,
  socket: [Object],
  connection: [Object],
  _header: null,
  _headers: null,
  _headerNames: {},
  _onPendingData: [Object],
  log: [Object],
  _time: 1470554549232,
  acceptable: [Object],
  formatters: [Object],
  req: [Object],
  serverName: 'restify',
  version: undefined,
  methods: [Object] } <<

# Restify, parsed

 RESPONSE TYPE: ServerResponse {
  domain: [Object],
  _events: [Object],
  _eventsCount: 1,
  _maxListeners: undefined,
  output: [Object],
  outputEncodings: [Object],
  outputCallbacks: [Object],
  outputSize: 0,
  writable: true,
  _last: false,
  chunkedEncoding: false,
  shouldKeepAlive: false,
  useChunkedEncodingByDefault: true,
  sendDate: true,
  _removedHeader: {},
  _contentLength: null,
  _hasBody: true,
  _trailer: '',
  finished: false,
  _headerSent: false,
  socket: [Object],
  connection: [Object],
  _header: null,
  _headers: null,
  _headerNames: {},
  _onPendingData: [Object],
  log: [Object],
  _time: 1470554549249,
  acceptable: [Object],
  formatters: [Object],
  req: [Object],
  serverName: 'restify',
  version: undefined,
  methods: [Object] } <<
